#!/usr/bin/env perl

# Use mandatory external modules
use strict;
use warnings FATAL => 'all';
use Cwd;
use File::Basename;

# Determine installation dir name
our $SELF_DIR = dirname(dirname(dirname(Cwd::abs_path(__FILE__))));

# Include parts of the system
require $SELF_DIR . '/lib/Common/Config.pm';
require $SELF_DIR . '/lib/Agent/Helpers/Actions.pm';
require $SELF_DIR . '/lib/Agent/Helpers/Network.pm';

# Check arguments
if (scalar(@ARGV) != 0) {
    print "Usage: $0\n\n";
    exit(1);
}

# Read config file
our $config = new MMM::Common::Config::;
$config->read('mmm_agent');
$config->check('AGENT');

# Finally do the work
my $output = MMM::Agent::Helpers::Actions::sync_with_master();

print $output, "\n";
exit(0);

__END__

=head1 NAME

sync_with_master

=head1 DESCRIPTION

sync_with_master is a helper binary for B<mmmd_agent>. It tries to sync up a (soon active) master with his peer (old active master) when the I<active_writer_role> is moved. If the peer is reachable it syncs with the master log. If not reachable, syncs with the relay log.

=head1 USAGE

sync_with_master
