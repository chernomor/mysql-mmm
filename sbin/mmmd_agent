#!/usr/bin/env perl

use strict;
use warnings FATAL => 'all';
use English qw( PROGRAM_NAME );
use Proc::Daemon;
use Log::Log4perl qw(:easy);
Log::Log4perl->easy_init($INFO);

# Define protocol version
use constant MMM_PROTOCOL_VERSION => 1;


# Include parts of the system
use MMM::Common::Config;
use MMM::Common::Log;
use MMM::Common::PidFile;
use MMM::Agent::Agent;

MMM::Common::Log::init('mmm_agent_log.conf', 'mmmd_agent');

# Read configuration
our $config = new MMM::Common::Config::;
$config->read('mmm_agent');
$config->check('AGENT');

my $debug = 0;
$debug = 1 unless ($config->{debug} =~ /^(false|off|no|0)$/i);

MMM::Common::Log::debug() if ($debug);

our $agent	= new MMM::Agent::Agent::(
	protocol_version	=> 1,
	active_master		=> '',
	state				=> 'UNKNOWN'
);
$agent->from_config($config);

my $pidfilename = $config->{host}->{ $config->{this} }->{pid_path};
my $pidfile = new MMM::Common::PidFile:: $pidfilename;

# Check pid file
LOGDIE	"Can't run second copy of ", $PROGRAM_NAME	if ($pidfile->is_running());
WARN	"Unclean start - found stale pid file!"		if ($pidfile->exists());

unless ($debug) {
	# Go to background
	Proc::Daemon::Init();
	# Init logging again to re-open fds
	MMM::Common::Log::init('mmm_agent_log.conf', 'mmmd_agent');
}
$pidfile->create();

# Shutdown flag
our $shutdown = 0;

# Catch signals
$SIG{INT} = \&SignalHandler;
$SIG{TERM} = \&SignalHandler;

$agent->main();

# Remove pid file
$pidfile->remove();

INFO 'END';
exit(0);

#-----------------------------------------------------------------
sub SignalHandler() {
	INFO "Signal received: exiting...";
	$shutdown = 1;
}
