#!/usr/bin/env perl

# Use mandatory external modules
use strict;
use warnings FATAL => 'all';
use Cwd;
use File::Basename;

# Determine installation dir name
our $SELF_DIR = dirname(dirname(dirname(Cwd::abs_path(__FILE__))));

# Include parts of the system
require $SELF_DIR . '/lib/Common/Config.pm';
require $SELF_DIR . '/lib/Agent/Helpers/Actions.pm';
require $SELF_DIR . '/lib/Agent/Helpers/Network.pm';

# Check arguments
if (scalar(@ARGV) != 1) {
	print "Usage: $0 <new_master>\n\n";
	exit(1);
}

my $new_master = shift;

# Read config file
our $config = new MMM::Common::Config::;
$config->read('mmm_agent');
$config->check('AGENT');

# Finally do the work
my $output = MMM::Agent::Helpers::Actions::set_active_master($new_master);

print $output, "\n";
exit(0);

__END__

=head1 NAME

set_active_master

=head1 DESCRIPTION

set_active_master is a helper binary for B<mmmd_agent>. It tries to catch up with the old master as far as possible and changes the master to the new host.
(Syncs to the master log if the old master is reachable. Otherwise syncs to the relay log.)

=head1 USAGE

set_active_master <new_master>

=head1 EXAMPLE

set_active_master db2
