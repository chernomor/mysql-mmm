#!/bin/sh
#
# mysql-mmm-monitor  This shell script takes care of starting and stopping
#                    the mmm monitoring daemon.
#
# chkconfig: - 64 36
# description:  MMM Monitor.
# processname: mmmd_mon
# config: /etc/mmm_mon.conf
# pidfile: /var/run/mmmd_mon.pid

# Cluster name (it can be empty for default cases)
CLUSTER=''

ENABLED=0

test -f /etc/default/mysql-mmm-monitor && . /etc/default/mysql-mmm-monitor

if [ "$ENABLED" = "0" ]; then
    echo "MMM Monitor disabled, see /etc/default/mysql-mmm-monitor"
    exit 0
fi


#-----------------------------------------------------------------------
# Paths
if [ "$CLUSTER" != "" ]; then
    MMMD_MON_BIN="/usr/sbin/mmmd_mon @$CLUSTER"
    MMMD_MON_PIDFILE="/var/run/mmmd_mon-$CLUSTER.pid"
else 
    MMMD_MON_BIN="/usr/sbin/mmmd_mon"
    MMMD_MON_PIDFILE="/var/run/mmmd_mon.pid"
fi

echo "Daemon bin: '$MMMD_MON_BIN'"
echo "Daemon pid: '$MMMD_MON_PIDFILE'"

#-----------------------------------------------------------------------
# See how we were called.
case "$1" in
  start)
        # Start daemon.
        echo -n "Starting MMM Monitor daemon: "
        if [ -s $MMMD_MON_PIDFILE ] && kill -0 `cat $MMMD_MON_PIDFILE` 2> /dev/null; then
            echo " already running."
            exit 0
        fi
        $MMMD_MON_BIN
        if [ "$?" -ne 0 ]; then
            echo "failed"
            exit 1
        fi
        echo "Ok"
        exit 0
        ;;

  stop)
        # Stop daemon.
        echo -n "Shutting down MMM Monitor daemon: "
        if [ -s $MMMD_MON_PIDFILE ]; then
            pid="$(cat $MMMD_MON_PIDFILE)"
            cnt=0
            kill "$pid"
            while kill -0 "$pid" 2>/dev/null; do
                cnt=`expr "$cnt" + 1`
                if [ "$cnt" -gt 15 ]; then
                    kill -9 "$pid"
                    break
                fi
                sleep 2
                echo -n "."
            done
            echo " Ok"
            exit 0
        fi
        echo " not running."
        exit 0
        ;;

  status)
        echo -n "Checking MMM Monitor process:"
        if [ ! -s $MMMD_MON_PIDFILE ]; then
            echo " not running."
            exit 3
        fi
        pid="$(cat $MMMD_MON_PIDFILE)"
        if ! kill -0 "$pid" 2> /dev/null; then
            echo " not running."
            exit 1
        fi
        echo " running."
        exit 0
        ;;

  restart|reload)
        $0 stop
        $0 start
        exit $?
        ;;

  *)
        echo "Usage: $0 {start|stop|restart|status}"
        ;;
esac

exit 1
